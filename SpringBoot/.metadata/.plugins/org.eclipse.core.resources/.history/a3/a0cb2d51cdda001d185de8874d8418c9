package cogent.infotech.com.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.Movie.entity.MovieEntity;

import cogent.infotech.com.entity.Movie;
import cogent.infotech.com.service.MovieServiceImpl;

@RestController
@RequestMapping("/api/admin")
public class AdminMovieController {

	@Autowired
	MovieServiceImpl msi;
	
	 @PostMapping
	 public ResponseEntity<Movie> create(@RequestBody Movie movie) {
		 Movie createdMovie = msi.create(movie);
	     return ResponseEntity.status(HttpStatus.CREATED).body(createdMovie);
	 }
	 
	  @GetMapping
	  public List<Movie> readAll() {
	        return msi.read();
	  }
	  
	  @GetMapping("/{name}")
	    public ResponseEntity<Movie> getMovieById(@PathVariable String name) {
	        Optional<Movie> movie = msi.readByName(name);
	        return movie.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());
	   }
	  
	  @PutMapping("/{id}")
	    public ResponseEntity<Movie> updateMovie(@PathVariable Long id, @RequestBody Movie movie) {
	        Optional<Movie> updatedMovie =msi.readById(id)
	                .map(existingMovie -> msi.update(id, movie));
	        return updatedMovie.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());
	    }
	  
	  @DeleteMapping("/{id}")
	    public ResponseEntity<Void> deleteMovie(@PathVariable Long id) {
	        Optional<MovieEntity> Movie = MovieService.getMovieById(id);
	        if (Movie.isPresent()) {
	            MovieService.delete(id);
	            return ResponseEntity.noContent().build();
	        } else {
	            return ResponseEntity.notFound().build();
	        }
	    }
	
}
